{"ID":"33320940-4da5-45e3-9d35-1355822db5cb","VersionNumber":2,"Name":"Security : Database at risk of priviledge escalation attack.","Description":"","AppliesToObjectTypeID":"0a11a887-823a-4461-87af-321cad1c3623","ConditionCategoryID":"805a84c9-7f1b-4b4d-a9ad-3dddcf9e0f17","OwnerObjectID":"b7c74f24-1a45-4115-8262-d7613878bbd6","OwnerObjectTypeID":"894de672-3fc0-4779-9a0d-880d4c207c77","RuleDefinition":"{\"OperationTypeID\":\"6c3d38f1-9317-4258-972a-cfee0a0d76b5\",\"Children\":[{\"OperationTypeID\":\"8fa3cd6a-960c-43bb-96e0-94092fc2c296\",\"ValueDataTypeID\":\"5fc935ac-e954-413e-b9ec-a27b8403aefe\",\"Left\":{\"ValueTypeID\":\"aa61ee90-8a95-4fdf-a208-b9a4afa26d9d\",\"Database\":\"master\",\"Query\":\"--// Criteria for condition\\r\\n---------------------\\r\\n--// Database Owner is a member of SysAdmin\\r\\n--// Database has TRUSTWORTHY ON\\r\\n--// Database has members in the db_owner database role\\r\\n--// Database has users that can impersonance members of db_owner\\r\\n--// Database is NOT MSDB\\r\\n\\r\\nCREATE TABLE #DbOwnerList\\r\\n       (\\r\\n        DatabaseId INT,\\r\\n        DatabaseName sysname,\\r\\n        RoleName sysname,\\r\\n        Membername sysname\\r\\n       );\\r\\n\\r\\n\\r\\nCREATE TABLE #ImpersonationList\\r\\n       (\\r\\n        DatabaseId INT,\\r\\n        DatabaseName sysname,\\r\\n        ImperonatingUser sysname,\\r\\n        ImpersonatedUser sysname,\\r\\n\\t\\tImpersonatedUserRole sysname\\r\\n       );\\r\\n\\r\\n\\r\\nDECLARE @name_pattern NVARCHAR(257) = '%'\\r\\nDECLARE @recovery_model NVARCHAR(60) = NULL\\r\\n\\r\\nDECLARE @SqlStatement NVARCHAR(MAX) = (N'USE ?\\r\\n    \\t\\t\\r\\n    SELECT DB_ID() AS DatabaseId,\\r\\n    \\tDB_NAME() AS DatabaseName,\\r\\n    \\troles.name AS RoleName,\\r\\n    \\tmembers.name AS MemberName\\r\\n    from sys.database_role_members as rm\\r\\n    join sys.database_principals as roles on rm.role_principal_id = roles.principal_id\\r\\n    right join sys.database_principals as members on rm.member_principal_id = members.principal_id\\r\\n    WHERE roles.name = N''db_owner'' AND members.name <> N''dbo'';');\\r\\n\\r\\nDECLARE @sql NVARCHAR(MAX)\\r\\nDECLARE @db NVARCHAR(257)\\r\\n;\\r\\n\\r\\nDECLARE c CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY\\r\\nFOR\\r\\n        SELECT QUOTENAME(name)\\r\\n        FROM   sys.databases\\r\\n        WHERE  (\\r\\n                @recovery_model IS NULL OR (recovery_model_desc = @recovery_model)\\r\\n            ) AND name LIKE @name_pattern AND state = 0 AND is_read_only = 0\\r\\n        ORDER BY name;\\r\\n\\r\\nOPEN c;\\r\\n    \\r\\nFETCH NEXT FROM c INTO @db;\\r\\n\\r\\nWHILE @@Fetch_Status <> -1\\r\\n    BEGIN\\r\\n            SET @sql = REPLACE(@SqlStatement, '?', @db);\\r\\n            BEGIN TRY\\r\\n\\t\\t\\t\\tINSERT  INTO #DbOwnerList\\r\\n\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t DatabaseId,\\r\\n\\t\\t\\t\\t DatabaseName,\\r\\n\\t\\t\\t\\t RoleName,\\r\\n\\t\\t\\t\\t Membername\\r\\n\\t\\t\\t\\t)\\r\\n                EXEC(@sql);\\r\\n            END TRY\\r\\n            BEGIN CATCH\\r\\n                PRINT ERROR_MESSAGE();\\r\\n            END CATCH;\\r\\n\\r\\n            FETCH NEXT FROM c INTO @db;\\r\\n    END;\\r\\n\\r\\nCLOSE c;\\r\\nDEALLOCATE c;\\r\\n\\r\\nSET @sql = N'';\\r\\nSET @db = N'';\\r\\n\\r\\nSET @SqlStatement = (N'USE ?\\r\\n\\t\\t\\r\\n\\t\\tSELECT DB_ID() AS DatabaseId,\\r\\n\\t\\t\\tDB_NAME() AS DatabaseName,\\r\\n\\t\\t\\tImpersonator.name AS ImperonatingUser,\\r\\n\\t\\t\\tImpersonated.name AS ImpersonatedUser,\\r\\n\\t\\t\\tDatabaseRole.name AS ImpersonatedUserRole\\r\\n\\t\\tFROM sys.database_permissions AS dp\\r\\n\\t\\tJOIN sys.database_principals AS Impersonated ON dp.major_id = Impersonated.principal_id\\r\\n\\t\\tJOIN sys.database_principals AS Impersonator ON dp.grantee_principal_id = Impersonator.principal_id\\r\\n\\t\\tJOIN sys.database_role_members AS RoleMembers ON Impersonated.principal_id = RoleMembers.member_principal_id\\r\\n\\t\\tJOIN sys.database_principals AS DatabaseRole ON RoleMembers.role_principal_id = DatabaseRole.principal_id\\r\\n\\t\\tWHERE permission_name = ''impersonate''\\r\\n\\t\\t\\tAND DatabaseRole.name = ''db_owner''\\r\\n\\t\\t;');\\r\\n\\r\\nDECLARE c CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY\\r\\nFOR\\r\\n        SELECT QUOTENAME(name)\\r\\n        FROM   sys.databases\\r\\n        WHERE  (\\r\\n                @recovery_model IS NULL OR (recovery_model_desc = @recovery_model)\\r\\n            ) AND name LIKE @name_pattern AND state = 0 AND is_read_only = 0\\r\\n        ORDER BY name;\\r\\n\\r\\nOPEN c;\\r\\n    \\r\\nFETCH NEXT FROM c INTO @db;\\r\\n\\r\\nWHILE @@Fetch_Status <> -1\\r\\n    BEGIN\\r\\n            SET @sql = REPLACE(@SqlStatement, '?', @db);\\r\\n            BEGIN TRY\\r\\n\\t\\t\\t\\tINSERT  INTO #ImpersonationList\\r\\n\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t DatabaseId,\\r\\n\\t\\t\\t\\t DatabaseName,\\r\\n\\t\\t\\t\\t ImperonatingUser,\\r\\n\\t\\t\\t\\t ImpersonatedUser,\\r\\n\\t\\t\\t\\t ImpersonatedUserRole\\r\\n\\t\\t\\t\\t)\\r\\n                EXEC(@sql);\\r\\n            END TRY\\r\\n            BEGIN CATCH\\r\\n                PRINT ERROR_MESSAGE();\\r\\n            END CATCH;\\r\\n\\r\\n            FETCH NEXT FROM c INTO @db;\\r\\n    END;\\r\\n\\r\\nCLOSE c;\\r\\nDEALLOCATE c;\\r\\n\\r\\n--// Script to identify databases at risk.\\r\\nWITH _ServerPrincipals\\r\\nAS (\\r\\n\\t\\tSELECT    members.sid AS memberSid,\\r\\n\\t\\t\\t\\tmembers.name AS PrincipalName,\\r\\n\\t\\t\\t\\troles.name AS RoleName,\\r\\n\\t\\t\\t\\troles.is_fixed_role,\\r\\n\\t\\t\\t\\tCASE WHEN roles.name = 'sysadmin' THEN 1\\r\\n\\t\\t\\t\\t\\t\\tELSE 0\\r\\n\\t\\t\\t\\tEND AS IsSysAdmin\\r\\n\\t\\tFROM sys.server_role_members AS rm\\r\\n\\t\\tJOIN sys.server_principals AS roles ON rm.role_principal_id = roles.principal_id\\r\\n\\t\\tRIGHT JOIN sys.server_principals AS members ON rm.member_principal_id = members.principal_id\\r\\n\\t)\\r\\nSELECT DISTINCT N'DatabaseName : ' + d.name \\r\\n\\t+ N' | DbOwner : ' + p.PrincipalName \\r\\n\\t+ N' DbOwnerRole : ' + p.RoleName \\r\\n\\t+ N'[IsSysAdmin=' \\r\\n\\t+ CASE p.IsSysAdmin\\r\\n\\t\\tWHEN 1 THEN N'Yes]'\\r\\n\\t\\tELSE N'No]'\\r\\n\\t\\tEND\\r\\n\\t+ ISNULL((+ N'| DbRole : ' + dbr.RoleName + N' | Role Members :'),N'')\\r\\n\\t+ ISNULL(STUFF((SELECT N', ' + N'{' + dbl.Membername + N'}'\\r\\n\\t\\t\\tFROM #DbOwnerList AS dbl\\r\\n\\t\\t\\tWHERE dbl.DatabaseId = d.Database_id\\r\\n\\t\\t\\tORDER BY dbl.DatabaseId, dbl.RoleName\\r\\n\\t\\t\\tFOR XML PATH(N''),TYPE).value(N'.[1]',N'NVARCHAR(MAX)'),1,2,N''),N'')\\r\\n\\t+ ISNULL((+ N' | ImpersonatedUser : ' + ipl.ImpersonatedUser + N'(' + ipl.ImpersonatedUserRole + N')'),N'')\\r\\n\\t+ ISNULL(STUFF(\\r\\n\\t\\t(SELECT N', ' + N'{' + il.ImperonatingUser + N'}'\\r\\n\\t\\tFROM #ImpersonationList AS il\\r\\n\\t\\tWHERE il.DatabaseId = d.database_id\\r\\n\\t\\tORDER BY il.DatabaseId, il.ImpersonatedUser\\r\\n\\t\\tFOR XML PATH(N''),TYPE).value(N'.[1]',N'NVARCHAR(MAX)'),1,2,N''),N'') AS InfoColumn,\\r\\n\\tCASE \\r\\n\\t\\tWHEN(d.is_trustworthy_on = 1 AND p.IsSysAdmin = 1) THEN CAST(1 AS BIT)\\r\\n        ELSE CAST(0 AS BIT)\\r\\n\\tEND AS DbAtRisk\\r\\nFROM sys.databases AS d\\r\\nLEFT JOIN #DbOwnerList AS dbr ON d.database_id = dbr.DatabaseId\\r\\nLEFT JOIN #ImpersonationList AS ipl ON d.database_id = ipl.DatabaseId\\r\\nJOIN _ServerPrincipals AS p ON d.owner_sid = p.memberSid\\r\\nWHERE d.name <> N'MSDB';\\r\\n\\r\\nDROP TABLE #DbOwnerList;\\r\\nDROP TABLE #ImpersonationList;\\r\\n\",\"InstanceType\":1},\"ComparisonType\":0,\"Right\":{\"ValueTypeID\":\"07f87b7f-c063-47a2-a5be-772ba85ed827\",\"Value\":\"True\"},\"ID\":\"1\"}],\"BooleanOperationType\":0,\"ID\":\"0\"}","EvaluationFrequency":"00:30:00","IdlePeriod":"00:00:00","MaximumAllowedDuration":"00:00:05","AntiConditionID":"4ec59c7f-493b-4cee-b7d1-47135a549f96","MinWindowsVersion":null,"MaxWindowsVersion":null,"MinSQLServerVersion":null,"MaxSQLServerVersion":null,"MinSSASVersion":null,"MaxSSASVersion":null,"MinVmwareVersion":null,"MaxVmwareVersion":null,"MinSqlDbVersion":null,"MaxSqlDbVersion":null,"MaximumInstanceCount":100,"ColorIndicator":-65536,"Severity":2,"Signature":{"ConditionID":"33320940-4da5-45e3-9d35-1355822db5cb","VersionNumber":2,"AppliesToObjectTypeID":"0a11a887-823a-4461-87af-321cad1c3623","RuleDefinition":"{\"OperationTypeID\":\"6c3d38f1-9317-4258-972a-cfee0a0d76b5\",\"Children\":[{\"OperationTypeID\":\"8fa3cd6a-960c-43bb-96e0-94092fc2c296\",\"ValueDataTypeID\":\"5fc935ac-e954-413e-b9ec-a27b8403aefe\",\"Left\":{\"ValueTypeID\":\"aa61ee90-8a95-4fdf-a208-b9a4afa26d9d\",\"Database\":\"master\",\"Query\":\"--// Criteria for condition\\r\\n---------------------\\r\\n--// Database Owner is a member of SysAdmin\\r\\n--// Database has TRUSTWORTHY ON\\r\\n--// Database has members in the db_owner database role\\r\\n--// Database has users that can impersonance members of db_owner\\r\\n--// Database is NOT MSDB\\r\\n\\r\\nCREATE TABLE #DbOwnerList\\r\\n       (\\r\\n        DatabaseId INT,\\r\\n        DatabaseName sysname,\\r\\n        RoleName sysname,\\r\\n        Membername sysname\\r\\n       );\\r\\n\\r\\n\\r\\nCREATE TABLE #ImpersonationList\\r\\n       (\\r\\n        DatabaseId INT,\\r\\n        DatabaseName sysname,\\r\\n        ImperonatingUser sysname,\\r\\n        ImpersonatedUser sysname,\\r\\n\\t\\tImpersonatedUserRole sysname\\r\\n       );\\r\\n\\r\\n\\r\\nDECLARE @name_pattern NVARCHAR(257) = '%'\\r\\nDECLARE @recovery_model NVARCHAR(60) = NULL\\r\\n\\r\\nDECLARE @SqlStatement NVARCHAR(MAX) = (N'USE ?\\r\\n    \\t\\t\\r\\n    SELECT DB_ID() AS DatabaseId,\\r\\n    \\tDB_NAME() AS DatabaseName,\\r\\n    \\troles.name AS RoleName,\\r\\n    \\tmembers.name AS MemberName\\r\\n    from sys.database_role_members as rm\\r\\n    join sys.database_principals as roles on rm.role_principal_id = roles.principal_id\\r\\n    right join sys.database_principals as members on rm.member_principal_id = members.principal_id\\r\\n    WHERE roles.name = N''db_owner'' AND members.name <> N''dbo'';');\\r\\n\\r\\nDECLARE @sql NVARCHAR(MAX)\\r\\nDECLARE @db NVARCHAR(257)\\r\\n;\\r\\n\\r\\nDECLARE c CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY\\r\\nFOR\\r\\n        SELECT QUOTENAME(name)\\r\\n        FROM   sys.databases\\r\\n        WHERE  (\\r\\n                @recovery_model IS NULL OR (recovery_model_desc = @recovery_model)\\r\\n            ) AND name LIKE @name_pattern AND state = 0 AND is_read_only = 0\\r\\n        ORDER BY name;\\r\\n\\r\\nOPEN c;\\r\\n    \\r\\nFETCH NEXT FROM c INTO @db;\\r\\n\\r\\nWHILE @@Fetch_Status <> -1\\r\\n    BEGIN\\r\\n            SET @sql = REPLACE(@SqlStatement, '?', @db);\\r\\n            BEGIN TRY\\r\\n\\t\\t\\t\\tINSERT  INTO #DbOwnerList\\r\\n\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t DatabaseId,\\r\\n\\t\\t\\t\\t DatabaseName,\\r\\n\\t\\t\\t\\t RoleName,\\r\\n\\t\\t\\t\\t Membername\\r\\n\\t\\t\\t\\t)\\r\\n                EXEC(@sql);\\r\\n            END TRY\\r\\n            BEGIN CATCH\\r\\n                PRINT ERROR_MESSAGE();\\r\\n            END CATCH;\\r\\n\\r\\n            FETCH NEXT FROM c INTO @db;\\r\\n    END;\\r\\n\\r\\nCLOSE c;\\r\\nDEALLOCATE c;\\r\\n\\r\\nSET @sql = N'';\\r\\nSET @db = N'';\\r\\n\\r\\nSET @SqlStatement = (N'USE ?\\r\\n\\t\\t\\r\\n\\t\\tSELECT DB_ID() AS DatabaseId,\\r\\n\\t\\t\\tDB_NAME() AS DatabaseName,\\r\\n\\t\\t\\tImpersonator.name AS ImperonatingUser,\\r\\n\\t\\t\\tImpersonated.name AS ImpersonatedUser,\\r\\n\\t\\t\\tDatabaseRole.name AS ImpersonatedUserRole\\r\\n\\t\\tFROM sys.database_permissions AS dp\\r\\n\\t\\tJOIN sys.database_principals AS Impersonated ON dp.major_id = Impersonated.principal_id\\r\\n\\t\\tJOIN sys.database_principals AS Impersonator ON dp.grantee_principal_id = Impersonator.principal_id\\r\\n\\t\\tJOIN sys.database_role_members AS RoleMembers ON Impersonated.principal_id = RoleMembers.member_principal_id\\r\\n\\t\\tJOIN sys.database_principals AS DatabaseRole ON RoleMembers.role_principal_id = DatabaseRole.principal_id\\r\\n\\t\\tWHERE permission_name = ''impersonate''\\r\\n\\t\\t\\tAND DatabaseRole.name = ''db_owner''\\r\\n\\t\\t;');\\r\\n\\r\\nDECLARE c CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY\\r\\nFOR\\r\\n        SELECT QUOTENAME(name)\\r\\n        FROM   sys.databases\\r\\n        WHERE  (\\r\\n                @recovery_model IS NULL OR (recovery_model_desc = @recovery_model)\\r\\n            ) AND name LIKE @name_pattern AND state = 0 AND is_read_only = 0\\r\\n        ORDER BY name;\\r\\n\\r\\nOPEN c;\\r\\n    \\r\\nFETCH NEXT FROM c INTO @db;\\r\\n\\r\\nWHILE @@Fetch_Status <> -1\\r\\n    BEGIN\\r\\n            SET @sql = REPLACE(@SqlStatement, '?', @db);\\r\\n            BEGIN TRY\\r\\n\\t\\t\\t\\tINSERT  INTO #ImpersonationList\\r\\n\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t DatabaseId,\\r\\n\\t\\t\\t\\t DatabaseName,\\r\\n\\t\\t\\t\\t ImperonatingUser,\\r\\n\\t\\t\\t\\t ImpersonatedUser,\\r\\n\\t\\t\\t\\t ImpersonatedUserRole\\r\\n\\t\\t\\t\\t)\\r\\n                EXEC(@sql);\\r\\n            END TRY\\r\\n            BEGIN CATCH\\r\\n                PRINT ERROR_MESSAGE();\\r\\n            END CATCH;\\r\\n\\r\\n            FETCH NEXT FROM c INTO @db;\\r\\n    END;\\r\\n\\r\\nCLOSE c;\\r\\nDEALLOCATE c;\\r\\n\\r\\n--// Script to identify databases at risk.\\r\\nWITH _ServerPrincipals\\r\\nAS (\\r\\n\\t\\tSELECT    members.sid AS memberSid,\\r\\n\\t\\t\\t\\tmembers.name AS PrincipalName,\\r\\n\\t\\t\\t\\troles.name AS RoleName,\\r\\n\\t\\t\\t\\troles.is_fixed_role,\\r\\n\\t\\t\\t\\tCASE WHEN roles.name = 'sysadmin' THEN 1\\r\\n\\t\\t\\t\\t\\t\\tELSE 0\\r\\n\\t\\t\\t\\tEND AS IsSysAdmin\\r\\n\\t\\tFROM sys.server_role_members AS rm\\r\\n\\t\\tJOIN sys.server_principals AS roles ON rm.role_principal_id = roles.principal_id\\r\\n\\t\\tRIGHT JOIN sys.server_principals AS members ON rm.member_principal_id = members.principal_id\\r\\n\\t)\\r\\nSELECT DISTINCT N'DatabaseName : ' + d.name \\r\\n\\t+ N' | DbOwner : ' + p.PrincipalName \\r\\n\\t+ N' DbOwnerRole : ' + p.RoleName \\r\\n\\t+ N'[IsSysAdmin=' \\r\\n\\t+ CASE p.IsSysAdmin\\r\\n\\t\\tWHEN 1 THEN N'Yes]'\\r\\n\\t\\tELSE N'No]'\\r\\n\\t\\tEND\\r\\n\\t+ ISNULL((+ N'| DbRole : ' + dbr.RoleName + N' | Role Members :'),N'')\\r\\n\\t+ ISNULL(STUFF((SELECT N', ' + N'{' + dbl.Membername + N'}'\\r\\n\\t\\t\\tFROM #DbOwnerList AS dbl\\r\\n\\t\\t\\tWHERE dbl.DatabaseId = d.Database_id\\r\\n\\t\\t\\tORDER BY dbl.DatabaseId, dbl.RoleName\\r\\n\\t\\t\\tFOR XML PATH(N''),TYPE).value(N'.[1]',N'NVARCHAR(MAX)'),1,2,N''),N'')\\r\\n\\t+ ISNULL((+ N' | ImpersonatedUser : ' + ipl.ImpersonatedUser + N'(' + ipl.ImpersonatedUserRole + N')'),N'')\\r\\n\\t+ ISNULL(STUFF(\\r\\n\\t\\t(SELECT N', ' + N'{' + il.ImperonatingUser + N'}'\\r\\n\\t\\tFROM #ImpersonationList AS il\\r\\n\\t\\tWHERE il.DatabaseId = d.database_id\\r\\n\\t\\tORDER BY il.DatabaseId, il.ImpersonatedUser\\r\\n\\t\\tFOR XML PATH(N''),TYPE).value(N'.[1]',N'NVARCHAR(MAX)'),1,2,N''),N'') AS InfoColumn,\\r\\n\\tCASE \\r\\n\\t\\tWHEN(d.is_trustworthy_on = 1 AND p.IsSysAdmin = 1) THEN CAST(1 AS BIT)\\r\\n        ELSE CAST(0 AS BIT)\\r\\n\\tEND AS DbAtRisk\\r\\nFROM sys.databases AS d\\r\\nLEFT JOIN #DbOwnerList AS dbr ON d.database_id = dbr.DatabaseId\\r\\nLEFT JOIN #ImpersonationList AS ipl ON d.database_id = ipl.DatabaseId\\r\\nJOIN _ServerPrincipals AS p ON d.owner_sid = p.memberSid\\r\\nWHERE d.name <> N'MSDB';\\r\\n\\r\\nDROP TABLE #DbOwnerList;\\r\\nDROP TABLE #ImpersonationList;\\r\\n\",\"InstanceType\":1},\"ComparisonType\":0,\"Right\":{\"ValueTypeID\":\"07f87b7f-c063-47a2-a5be-772ba85ed827\",\"Value\":\"True\"},\"ID\":\"1\"}],\"BooleanOperationType\":0,\"ID\":\"0\"}","PublisherID":0,"PublishDateUtc":"2016-09-07T12:07:26","Rights":0,"SignatureVersion":1,"SignaturePublicKey":"<RSAKeyValue><Modulus>uzJQ9gzevXFwOgw/hkcAtD+cA/bBbD1PRzhEZCxbZ6YwjJ1c9bbfXFItLQNwnm8bdWh2k57//qbpEj5DFHOW2EAjHc2Zw5m/vACm6OzelubPS5hbWvzshlaBJKm7KrpWQpPZClx/5eVvUVzOtlz+44RRTiOszObT58acJAQwA70=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>","Signature":"sfPiPWpWFnEgyCsloYEy2h/sSt9FJK5M90Qv19LapcYKOSXqgPNhEWExnserUz88QaDXi0vtzOvbsWz+7bySwcliGSmp6oXhugoCrdyosAGA91yPQTo74OokuiCbRL0hGIdYipgzK3ykXMlPbomWngTrLF2RVhFjjORJMHSLzGI=","IsSelfPublishedCondition":true},"Tags":"Security","Areas":[],"ConditionSystemVersion":3,"MinDBSchemaVersion":null,"MaxDBSchemaVersion":null,"Items":[]}