{"ID":"a5a6ebc6-40c4-4887-8baa-5cde621d140e","VersionNumber":3,"Name":"Check Last backup","Description":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\t<head>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><title>\r\n\t\t</title>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t.cs2654AE3A{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt}\r\n\t\t\t.csBEC5BAA2{color:#000000;background-color:transparent;font-family:Tahoma;font-size:8pt;font-weight:normal;font-style:normal;}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<p class=\"cs2654AE3A\"><span class=\"csBEC5BAA2\">Author: PKelley</span></p><p class=\"cs2654AE3A\"><span class=\"csBEC5BAA2\">&nbsp;</span></p></body>\r\n</html>\r\n","AppliesToObjectTypeID":"0a11a887-823a-4461-87af-321cad1c3623","ConditionCategoryID":"805a84c9-7f1b-4b4d-a9ad-3dddcf9e0f17","OwnerObjectID":"b7c74f24-1a45-4115-8262-d7613878bbd6","OwnerObjectTypeID":"894de672-3fc0-4779-9a0d-880d4c207c77","RuleDefinition":"{\"OperationTypeID\":\"6c3d38f1-9317-4258-972a-cfee0a0d76b5\",\"Children\":[{\"OperationTypeID\":\"8fa3cd6a-960c-43bb-96e0-94092fc2c296\",\"ValueDataTypeID\":\"5fc935ac-e954-413e-b9ec-a27b8403aefe\",\"Left\":{\"ValueTypeID\":\"aa61ee90-8a95-4fdf-a208-b9a4afa26d9d\",\"Database\":\"MSDB\",\"Query\":\"Declare @backupTable Table\\r\\n(id smallint Primary Key IDENTITY(1,1),\\r\\ndatabase_name Varchar(max),\\r\\ndbcreated datetime,\\r\\nBackup_Type varchar(25),\\r\\nbackup_finish_date datetime,\\r\\nvalidbackup bit\\r\\n)\\r\\n\\r\\n   ;with backup_cte as\\r\\n(\\r\\n    select\\r\\n        db.name as database_name,\\r\\n  create_date,\\r\\n        backup_type =\\r\\n            case type\\r\\n                when 'D' then 'database'\\r\\n                when 'L' then 'log'\\r\\n                when 'I' then 'differential'\\r\\n                else 'Nobackup'\\r\\n            end,\\r\\n        backup_finish_date,\\r\\n        rownum = \\r\\n            row_number() over\\r\\n            (\\r\\n                partition by database_name, type \\r\\n                order by backup_finish_date desc\\r\\n            )\\r\\n    from msdb.dbo.backupset right outer join master.sys.databases db on database_name = db.name\\r\\n where db.name not like 'Tempdb'\\r\\n)\\r\\n\\r\\nInsert Into @backupTable(database_name,dbcreated,backup_type,backup_finish_date)\\r\\nselect\\r\\n    database_name,\\r\\n create_date,\\r\\n    backup_type,\\r\\n    backup_finish_date\\r\\nfrom backup_cte \\r\\nwhere rownum = 1 --and DATEDIFF(dd,backup_finish_date,getdate()) > 8\\r\\norder by database_name;\\r\\n\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '0'\\r\\nwhere backup_finish_date is NULL\\r\\n/*\\r\\nif exists(select Backup_Type from @backupTable where Backup_Type='differential')\\r\\nbegin\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='differential' and DATEDIFF(hh,backup_finish_date,getdate()) <=24\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='database' and DATEDIFF(hh,backup_finish_date,getdate()) <=168\\r\\n\\r\\n\\r\\nEND\\r\\n*/\\r\\nif exists(select Backup_Type from @backupTable where Backup_Type='database' and validbackup IS NULL)\\r\\nBegin\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='database' and DATEDIFF(hh,backup_finish_date,getdate()) <=24\\r\\n\\r\\nEND\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '0'\\r\\nwhere validbackup IS NULL\\r\\n\\r\\n\\r\\nSelect validbackup from @backupTable where Backup_Type not like 'log'\",\"InstanceType\":0},\"ComparisonType\":0,\"Right\":{\"ValueTypeID\":\"07f87b7f-c063-47a2-a5be-772ba85ed827\",\"Value\":\"False\"},\"ID\":\"1\"}],\"BooleanOperationType\":0,\"ID\":\"0\"}","EvaluationFrequency":"1.00:00:00","IdlePeriod":"00:00:30","MaximumAllowedDuration":"00:00:05","AntiConditionID":"46fadea5-3a6f-4208-9b41-3009ac6c94bd","MinWindowsVersion":null,"MaxWindowsVersion":null,"MinSQLServerVersion":null,"MaxSQLServerVersion":null,"MinSSASVersion":null,"MaxSSASVersion":null,"MinVmwareVersion":null,"MaxVmwareVersion":null,"MinSqlDbVersion":null,"MaxSqlDbVersion":null,"MaximumInstanceCount":1,"ColorIndicator":null,"Severity":0,"Signature":{"ConditionID":"a5a6ebc6-40c4-4887-8baa-5cde621d140e","VersionNumber":3,"AppliesToObjectTypeID":"0a11a887-823a-4461-87af-321cad1c3623","RuleDefinition":"{\"OperationTypeID\":\"6c3d38f1-9317-4258-972a-cfee0a0d76b5\",\"Children\":[{\"OperationTypeID\":\"8fa3cd6a-960c-43bb-96e0-94092fc2c296\",\"ValueDataTypeID\":\"5fc935ac-e954-413e-b9ec-a27b8403aefe\",\"Left\":{\"ValueTypeID\":\"aa61ee90-8a95-4fdf-a208-b9a4afa26d9d\",\"Database\":\"MSDB\",\"Query\":\"Declare @backupTable Table\\r\\n(id smallint Primary Key IDENTITY(1,1),\\r\\ndatabase_name Varchar(max),\\r\\ndbcreated datetime,\\r\\nBackup_Type varchar(25),\\r\\nbackup_finish_date datetime,\\r\\nvalidbackup bit\\r\\n)\\r\\n\\r\\n   ;with backup_cte as\\r\\n(\\r\\n    select\\r\\n        db.name as database_name,\\r\\n  create_date,\\r\\n        backup_type =\\r\\n            case type\\r\\n                when 'D' then 'database'\\r\\n                when 'L' then 'log'\\r\\n                when 'I' then 'differential'\\r\\n                else 'Nobackup'\\r\\n            end,\\r\\n        backup_finish_date,\\r\\n        rownum = \\r\\n            row_number() over\\r\\n            (\\r\\n                partition by database_name, type \\r\\n                order by backup_finish_date desc\\r\\n            )\\r\\n    from msdb.dbo.backupset right outer join master.sys.databases db on database_name = db.name\\r\\n where db.name not like 'Tempdb'\\r\\n)\\r\\n\\r\\nInsert Into @backupTable(database_name,dbcreated,backup_type,backup_finish_date)\\r\\nselect\\r\\n    database_name,\\r\\n create_date,\\r\\n    backup_type,\\r\\n    backup_finish_date\\r\\nfrom backup_cte \\r\\nwhere rownum = 1 --and DATEDIFF(dd,backup_finish_date,getdate()) > 8\\r\\norder by database_name;\\r\\n\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '0'\\r\\nwhere backup_finish_date is NULL\\r\\n/*\\r\\nif exists(select Backup_Type from @backupTable where Backup_Type='differential')\\r\\nbegin\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='differential' and DATEDIFF(hh,backup_finish_date,getdate()) <=24\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='database' and DATEDIFF(hh,backup_finish_date,getdate()) <=168\\r\\n\\r\\n\\r\\nEND\\r\\n*/\\r\\nif exists(select Backup_Type from @backupTable where Backup_Type='database' and validbackup IS NULL)\\r\\nBegin\\r\\nupdate @backupTable\\r\\nset validbackup = '1'\\r\\nwhere  Backup_Type='database' and DATEDIFF(hh,backup_finish_date,getdate()) <=24\\r\\n\\r\\nEND\\r\\n\\r\\nupdate @backupTable\\r\\nset validbackup = '0'\\r\\nwhere validbackup IS NULL\\r\\n\\r\\n\\r\\nSelect validbackup from @backupTable where Backup_Type not like 'log'\",\"InstanceType\":0},\"ComparisonType\":0,\"Right\":{\"ValueTypeID\":\"07f87b7f-c063-47a2-a5be-772ba85ed827\",\"Value\":\"False\"},\"ID\":\"1\"}],\"BooleanOperationType\":0,\"ID\":\"0\"}","PublisherID":0,"PublishDateUtc":"2020-03-18T20:03:06","Rights":0,"SignatureVersion":1,"SignaturePublicKey":"<RSAKeyValue><Modulus>uzJQ9gzevXFwOgw/hkcAtD+cA/bBbD1PRzhEZCxbZ6YwjJ1c9bbfXFItLQNwnm8bdWh2k57//qbpEj5DFHOW2EAjHc2Zw5m/vACm6OzelubPS5hbWvzshlaBJKm7KrpWQpPZClx/5eVvUVzOtlz+44RRTiOszObT58acJAQwA70=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>","Signature":"jss6Qgv/SKIHZHegGrlUkayEKbI6hpv+2gj1VDTeL/K4qFKTBtgEVWCa6hjhMlk7HOOLy2UqLkB/N15neddTNG1R7DXMxjqFyViqJuc7uGksMETs8bDiJQPgAwPu1o5KFjeZX9RX406aTHqivVaOGzokuVYPI7hkkQx1viGTPYA=","IsSelfPublishedCondition":true},"Tags":"Needs purpose defining","Areas":[],"ConditionSystemVersion":3,"MinDBSchemaVersion":null,"MaxDBSchemaVersion":null,"Items":[]}